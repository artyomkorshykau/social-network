{"version":3,"file":"static/js/380.d8f2b9bf.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.tsx","webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/Pagination.tsx","components/Users/User.tsx","components/Users/Users.tsx","utils/selectors/selectors.ts","components/Users/UsersContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/store\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStateToPropsForRedirectType) {\r\n\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}\r\n\r\n//--------------------------------TYPES--------------------------------\r\ntype MapStateToPropsForRedirectType = {\r\n    isAuth: boolean | null\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__3SOne\",\"selectedPage\":\"Users_selectedPage__6kInd\"};","import s from \"./Users.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype PropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Pagination = (props: PropsType) => {\r\n    let pagesCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i += 1) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionSize = 10\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.pagination}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>пред.</button>}\r\n        {pages\r\n            .filter(el => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n            .map(el => {\r\n                return <span\r\n                    key={el}\r\n                    onClick={(e) => {\r\n                        props.onPageChanged(el)\r\n                    }}>\r\n                    {el}\r\n                </span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>\r\n                след.\r\n            </button>}\r\n    </div>\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport ava from \"../../img/ava.jpg\";\r\nimport s from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../api/social-network-api\";\r\n\r\ntype UserPropsType = {\r\n    isFollowing: []\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n    user: UserType\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n\r\n    let {user} = props\r\n\r\n    return (<div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + props.user.id}><img src={user.photos.small ? user.photos.small : ava}\r\n                                                                       alt=\"\"\r\n                                                                       className={s.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{user.followed\r\n                        ? <button disabled={props.isFollowing.some(id => id === user.id)} onClick={() => {\r\n                            props.unFollowTC(user.id)\r\n                        }}>Отписаться</button>\r\n                        : <button disabled={props.isFollowing.some(id => id === user.id)} onClick={() => {\r\n                            props.followTC(user.id)\r\n                        }}>Подписаться</button>}\r\n                            </div>\r\n                            </span>\r\n        <span>\r\n                            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{user.followed}</div>\r\n                            </span>\r\n                            </span>\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {UserType} from \"../../api/social-network-api\";\r\nimport {Pagination} from \"./Pagination\";\r\nimport {User} from \"./User\";\r\n\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Pagination totalUserCount={props.totalUserCount}\r\n                        pageSize={props.pageSize}\r\n                        currentPage={props.currentPage}\r\n                        onPageChanged={props.onPageChanged}/>\r\n            {\r\n                props.users.map((el) => <User followTC={props.followTC}\r\n                                              isFollowing={props.isFollowing}\r\n                                              unFollowTC={props.unFollowTC}\r\n                                              user={el}\r\n                                              key={el.id}/>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n\r\n//--------------------------------TYPES--------------------------------\r\ntype UsersPropsType = {\r\n    onPageChanged: (page: number) => void\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    users: UserType[]\r\n    follow: (id: number) => void\r\n    unfollow: (id: number) => void\r\n    isFetching: boolean\r\n    toggleIsFollowing: (fetching: boolean, id: number) => void\r\n    isFollowing: []\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n}\r\n","import {AppStateType} from \"../../redux/store\";\r\n\r\n\r\n// ------------------------USER SELECTORS--------------------------------\r\nexport const getUsers = (state: AppStateType) => state.usersPage.users\r\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize\r\nexport const getTotalUserCount = (state: AppStateType) => state.usersPage.totalUserCount\r\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage\r\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isFetching\r\nexport const getIsFollowing = (state: AppStateType) => state.usersPage.isFollowing\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport Users from \"./Users\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\"\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowing,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../utils/selectors/selectors\";\r\nimport {UserType} from \"../../api/social-network-api\";\r\nimport {\r\n    follow, setPage,\r\n    setTotalUserCount,\r\n    setUser,\r\n    toggleIsFetching,\r\n    toggleIsFollowing,\r\n    unfollow\r\n} from \"../../redux/actions/actions\";\r\nimport {followTC, getUsersTC, pageChangedTC, unFollowTC} from \"../../redux/thunks/thunks\";\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize, this.props.users)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.pageChangedTC(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUserCount={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFetching={this.props.isFetching}\r\n                   toggleIsFollowing={this.props.toggleIsFollowing}\r\n                   isFollowing={this.props.isFollowing}\r\n                   followTC={this.props.followTC}\r\n                   unFollowTC={this.props.unFollowTC}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToProps => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowing: getIsFollowing(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUser,\r\n        setPage,\r\n        setTotalUserCount,\r\n        toggleIsFetching,\r\n        toggleIsFollowing,\r\n        getUsersTC,\r\n        pageChangedTC,\r\n        followTC,\r\n        unFollowTC\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n//--------------------------------TYPES--------------------------------\r\ntype MapStateToProps = {\r\n    users: UserType[];\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowing: []\r\n}\r\nexport type UsersPropsType = MapStateToProps & MapDispatchToProps\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (id: number) => void;\r\n    unfollow: (id: number) => void;\r\n    setUser: (user: UserType[]) => void;\r\n    setPage: (pageNumber: number) => void\r\n    setTotalUserCount: (totalCount: number) => void\r\n    toggleIsFetching: (fetching: boolean) => void\r\n    toggleIsFollowing: (fetching: boolean, id: number) => void\r\n    getUsersTC: (currentPage: number, pageSize: number, users: UserType[]) => void\r\n    pageChangedTC: (pageNumber: number, pageSize: number) => void\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","Redirect","to","Pagination","pagesCount","Math","ceil","totalUserCount","pageSize","pages","i","push","portionCount","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","_jsxs","className","s","pagination","children","onClick","filter","el","map","e","onPageChanged","User","user","NavLink","id","src","photos","small","ava","alt","userPhoto","followed","disabled","isFollowing","some","unFollowTC","followTC","name","status","currentPage","users","getUsers","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getIsFollowing","UsersContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","pageNumber","pageChangedTC","_createClass","key","value","this","getUsersTC","_Fragment","Preloader","Users","follow","unfollow","toggleIsFollowing","React","compose","setUser","setPage","setTotalUserCount","toggleIsFetching","arr","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","Object","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}