{"version":3,"file":"static/js/655.0c7fc0d1.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","common/Pagination/Pagination.tsx","components/Users/UserSearchForm.tsx","utils/hooks/useUserData.ts","components/Users/UsersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__XuTmP\",\"selectedPage\":\"Users_selectedPage__HQ01S\"};","import {NavLink} from \"react-router-dom\";\r\nimport photo from \"../../img/photo.png\";\r\nimport s from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../api/types/typesApi\";\r\n\r\ntype Props = {\r\n    isFollowing: []\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n    user: UserType\r\n}\r\n\r\nexport const User = ({user, unFollowTC, followTC, isFollowing}: Props) => {\r\n\r\n    return (<div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}><img\r\n                            src={user.photos.small ? user.photos.small : photo}\r\n                            alt=\"\"\r\n                            className={s.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{user.followed\r\n                        ? <button disabled={isFollowing.some(id => id === user.id)} onClick={() => {\r\n                            unFollowTC(user.id)\r\n                        }}>Отписаться</button>\r\n                        : <button disabled={isFollowing.some(id => id === user.id)} onClick={() => {\r\n                            followTC(user.id)\r\n                        }}>Подписаться</button>}\r\n                            </div>\r\n                            </span>\r\n        <span>\r\n                            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                            <div>{user.id}</div>\r\n                            <div>{user.followed}</div>\r\n                            </span>\r\n                            </span>\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport cn from 'classnames'\r\n\r\ntype Props = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Pagination = ({totalUserCount, pageSize, onPageChanged, currentPage}: Props) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i += 1) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionSize = 10\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={''}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>пред.</button>}\r\n        {pages\r\n            .filter(el => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n            .map(el => {\r\n                return <span\r\n                    className={cn({\r\n                        ['']: currentPage === el\r\n                    }, '')}\r\n                    key={el}\r\n                    onClick={() => {\r\n                        onPageChanged(el)\r\n                    }}>\r\n                    {el}\r\n                </span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>\r\n                след.\r\n            </button>}\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport {Filter} from \"../../redux/users-reducer\";\r\nimport {Field} from \"formik\"\r\n\r\ntype Props = {\r\n    onFilterChanged: (filter: Filter) => void\r\n}\r\n\r\nexport const UserSearchForm = React.memo(({onFilterChanged}: Props) => {\r\n    return <div>\r\n        <h3>User search</h3>\r\n        <Formik\r\n            initialValues={{term: '', friend: null}}\r\n            onSubmit={(value: Filter, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n                onFilterChanged(value)\r\n                setSubmitting(false)\r\n            }}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <form>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"term\"\r\n                    />\r\n                    <Field name={'friend'} as={'select'} placeholder={'All users'}>\r\n                        <option value={'null'}>All</option>\r\n                        <option value={\"true\"}>Friend</option>\r\n                        <option value={'false'}>Not friends</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Search\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})","import {useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage, getIsFetching,\r\n    getIsFollowing,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUserFilter,\r\n    getUsers\r\n} from \"../selectors/userSelectors\";\r\n\r\nexport const useUserData = () => {\r\n    const totalUserCount = useSelector(getTotalUserCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const isFollowing = useSelector(getIsFollowing)\r\n    const filter = useSelector(getUserFilter)\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return {\r\n        totalUserCount,\r\n        currentPage,\r\n        pageSize,\r\n        users,\r\n        isFollowing,\r\n        filter,\r\n        isFetching\r\n    }\r\n}","import React, {useEffect} from 'react';\r\nimport {User} from \"./User\";\r\nimport {Pagination} from \"../../common/Pagination/Pagination\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {UserSearchForm} from \"./UserSearchForm\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\nimport {Filter} from \"../../redux/users-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {useUserData} from \"../../utils/hooks/useUserData\";\r\n const UsersPage = () => {\r\n\r\n    const {filter, users, totalUserCount, pageSize, currentPage, isFollowing, isFetching} = useUserData()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(thunks.getUsers(currentPage, pageSize, filter))\r\n    }, [])\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(thunks.getUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: Filter) => {\r\n        dispatch(thunks.getUsers(1, pageSize, filter))\r\n    }\r\n    const follow = (id: number) => {\r\n        dispatch(thunks.follow(id))\r\n    }\r\n    const unfollow = (id: number) => {\r\n        dispatch(thunks.unFollow(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Pagination totalUserCount={totalUserCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChanged={onPageChanged}/>\r\n            {isFetching ? <Preloader/> : null}\r\n            {\r\n                users.map((el) => <User followTC={follow}\r\n                                        isFollowing={isFollowing}\r\n                                        unFollowTC={unfollow}\r\n                                        user={el}\r\n                                        key={el.id}/>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersPage;"],"names":["User","_ref","user","unFollowTC","followTC","isFollowing","_jsxs","children","_jsx","NavLink","to","id","src","photos","small","photo","alt","className","s","followed","disabled","some","onClick","name","status","Pagination","totalUserCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","filter","el","map","cn","UserSearchForm","React","onFilterChanged","Formik","initialValues","term","friend","onSubmit","value","_ref2","setSubmitting","_ref3","isSubmitting","Field","type","as","placeholder","UsersPage","users","isFetching","useSelector","getTotalUserCount","getCurrentPage","getPageSize","getUsers","getIsFollowing","getUserFilter","getIsFetching","dispatch","useDispatch","useEffect","thunks","follow","unfollow","unFollow","pageNumber","Preloader"],"sourceRoot":""}