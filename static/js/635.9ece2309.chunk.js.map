{"version":3,"file":"static/js/635.9ece2309.chunk.js","mappings":"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","sources":["common/pagination/pagination.tsx","utils/selectors/user-selectors/user-selectors.ts","webpack://samurai-way/./src/components/user/user.module.css?fd4a","components/user/user.tsx","components/user-search-form/user-search-form.tsx","pages/users/users.tsx","utils/hooks/useUserData.ts"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport cn from 'classnames'\r\n\r\ntype Props = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Pagination = ({totalUserCount, pageSize, onPageChanged, currentPage}: Props) => {\r\n    let pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i += 1) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionSize = 10\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={''}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>пред.</button>}\r\n        {pages\r\n            .filter(el => el >= leftPortionPageNumber && el <= rightPortionPageNumber)\r\n            .map(el => {\r\n                return <span\r\n                    className={cn({\r\n                        ['']: currentPage === el\r\n                    }, '')}\r\n                    key={el}\r\n                    onClick={() => {\r\n                        onPageChanged(el)\r\n                    }}>\r\n                    {el}\r\n                </span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>\r\n                след.\r\n            </button>}\r\n    </div>\r\n}","import {AppState} from \"../../../redux/store/store\";\r\n\r\nexport const getUsers = (state: AppState) => state.usersPage.users\r\nexport const getPageSize = (state: AppState) => state.usersPage.pageSize\r\nexport const getTotalUserCount = (state: AppState) => state.usersPage.totalUserCount\r\nexport const getCurrentPage = (state: AppState) => state.usersPage.currentPage\r\nexport const getIsFetching = (state: AppState) => state.usersPage.isFetching\r\nexport const getIsFollowing = (state: AppState) => state.usersPage.isFollowing\r\nexport const getUserFilter = (state: AppState) => state.usersPage.filter\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"user_userPhoto__ZOxjJ\",\"selectedPage\":\"user_selectedPage__CvRao\",\"user\":\"user_user__8e98K\",\"userName\":\"user_userName__m6iat\",\"userStatus\":\"user_userStatus__-WS3k\"};","import {NavLink} from \"react-router-dom\";\r\nimport photo from \"../../img/photo.png\";\r\nimport s from \"./user.module.css\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../api/types/types-api\";\r\nimport {Button} from \"antd\";\r\n\r\ntype Props = {\r\n    isFollowing: []\r\n    followTC: (id: number) => void\r\n    unFollowTC: (id: number) => void\r\n    user: UserType\r\n}\r\n\r\nexport const User = ({user, unFollowTC, followTC, isFollowing}: Props) => {\r\n\r\n    return (<div className={s.user}>\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}><img\r\n                    src={user.photos.small ? user.photos.small : photo}\r\n                    alt=\"\"\r\n                    className={s.userPhoto}/>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n\r\n        <div>\r\n            <div className={s.userName}>{user.name}</div>\r\n\r\n        </div>\r\n        <div>\r\n            <div className={s.userStatus}>{user.status}</div>\r\n        </div>\r\n        <div>\r\n            <div className={s.userId}>ID: {user.id}</div>\r\n        </div>\r\n        <div>\r\n            <div>{user.followed}</div>\r\n        </div>\r\n        <div>\r\n            <div>{user.followed\r\n                ? <Button disabled={isFollowing.some(id => id === user.id)} onClick={() => {\r\n                    unFollowTC(user.id)\r\n                }}>Отписаться</Button>\r\n                : <Button disabled={isFollowing.some(id => id === user.id)} onClick={() => {\r\n                    followTC(user.id)\r\n                }}>Подписаться</Button>}\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport {Field} from \"formik\"\r\nimport {Filter} from \"../../redux/reducers/users-reducer\";\r\n\r\ntype Props = {\r\n    onFilterChanged: (filter: Filter) => void\r\n}\r\n\r\nexport const UserSearchForm = React.memo(({onFilterChanged}: Props) => {\r\n    return <div>\r\n        <h3>Поиск</h3>\r\n        <Formik\r\n            initialValues={{term: '', friend: null}}\r\n            onSubmit={(value: Filter, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n                onFilterChanged(value)\r\n                setSubmitting(false)\r\n            }}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <form>\r\n                    <Field\r\n                        type=\"text\"\r\n                        name=\"term\"\r\n                    />\r\n                    <Field name={'friend'} as={'select'} placeholder={'All user'}>\r\n                        <option value={'null'}>Все пользователи</option>\r\n                        <option value={\"true\"}>Мои подписки</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Найти\r\n                    </button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})","import React, {useEffect} from 'react';\r\nimport {Pagination} from \"../../common/pagination/pagination\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport {useUserData} from \"../../utils/hooks/useUserData\";\r\nimport {User} from \"../../components/user/user\";\r\nimport {Filter} from \"../../redux/reducers/users-reducer\";\r\nimport {UserSearchForm} from \"../../components/user-search-form/user-search-form\";\r\n\r\nconst Users = () => {\r\n\r\n    const {filter, users, totalUserCount, pageSize, currentPage, isFollowing, isFetching} = useUserData()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(thunks.getUsers(currentPage, pageSize, filter))\r\n    }, [])\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(thunks.getUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: Filter) => {\r\n        dispatch(thunks.getUsers(1, pageSize, filter))\r\n    }\r\n    const follow = (id: number) => {\r\n        dispatch(thunks.follow(id))\r\n    }\r\n    const unfollow = (id: number) => {\r\n        dispatch(thunks.unFollow(id))\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', gap: '20px'}}>\r\n            <UserSearchForm onFilterChanged={onFilterChanged}/>\r\n            <Pagination totalUserCount={totalUserCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChanged={onPageChanged}/>\r\n            {isFetching ? <Preloader/> : null}\r\n            <div style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                gap: ' 10px',\r\n                height: '200px',\r\n            }}>\r\n                {\r\n                    users.map((el) =>\r\n                        <User followTC={follow}\r\n                              isFollowing={isFollowing}\r\n                              unFollowTC={unfollow}\r\n                              user={el}\r\n                              key={el.id}/>)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import {useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage, getIsFetching,\r\n    getIsFollowing,\r\n    getPageSize,\r\n    getTotalUserCount, getUserFilter,\r\n    getUsers\r\n} from \"../selectors/user-selectors/user-selectors\";\r\n\r\n\r\nexport const useUserData = () => {\r\n    const totalUserCount = useSelector(getTotalUserCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const isFollowing = useSelector(getIsFollowing)\r\n    const filter = useSelector(getUserFilter)\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return {\r\n        totalUserCount,\r\n        currentPage,\r\n        pageSize,\r\n        users,\r\n        isFollowing,\r\n        filter,\r\n        isFetching\r\n    }\r\n}"],"names":["Pagination","_ref","totalUserCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","useState","leftPortionPageNumber","rightPortionPageNumber","_jsxs","className","children","_jsx","onClick","filter","el","map","cn","getUsers","state","usersPage","users","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getIsFollowing","isFollowing","getUserFilter","User","user","unFollowTC","followTC","s","NavLink","to","id","src","photos","small","photo","alt","userPhoto","userName","name","userStatus","status","userId","followed","Button","disabled","some","UserSearchForm","React","onFilterChanged","Formik","initialValues","term","friend","onSubmit","value","_ref2","setSubmitting","_ref3","isSubmitting","Field","type","as","placeholder","Users","useSelector","dispatch","useDispatch","useEffect","thunks","follow","unfollow","unFollow","style","display","flexDirection","gap","pageNumber","Preloader","flexWrap","height"],"sourceRoot":""}