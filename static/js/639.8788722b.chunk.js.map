{"version":3,"file":"static/js/639.8788722b.chunk.js","mappings":"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","sources":["utils/selectors/profile-selectors/profile-selectors.ts","utils/hooks/useProfileData.ts","webpack://samurai-way/./src/components/profile-info/profile-info.module.css?e552","components/profile-data-form/profile-data-form.tsx","components/contacts/contacts.tsx","components/profile-data/profile-data.tsx","components/profile-status/profile-status.tsx","components/profile-info/profile-info.tsx","webpack://samurai-way/./src/pages/profile/MyPosts/my-post.module.css?6765","webpack://samurai-way/./src/components/post/post.module.css?398f","components/post/post.tsx","webpack://samurai-way/./src/components/add-new-post-form/add-new-post-form.module.css?ae5b","components/add-new-post-form/add-new-post-form.tsx","pages/profile/MyPosts/my-post.tsx","utils/hooks/useMyPostsData.ts","pages/profile/profile.tsx"],"sourcesContent":["import {AppState} from \"../../../redux/store/store\";\r\n\r\nexport const getPosts = (state: AppState) => state.profilePage.posts\r\nexport const getProfile = (state: AppState) => state.profilePage.profile\r\nexport const getStatus = (state: AppState) => state.profilePage.status\r\nexport const getUserPhoto = (state: AppState) => state.profilePage.profile?.photos\r\n\r\n\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getProfile, getStatus} from \"../selectors/profile-selectors/profile-selectors\";\r\nimport {getIsAuth, getLoggedUser} from \"../selectors/auth-selectors/auth-selectors\";\r\n\r\nexport const useProfileData = () => {\r\n    const profile = useSelector(getProfile)\r\n    const status = useSelector(getStatus)\r\n    const dispatch = useDispatch()\r\n    const loggedUser = useSelector(getLoggedUser);\r\n    const isAuth = useSelector(getIsAuth);\r\n\r\n    return {\r\n        profile,\r\n        status,\r\n        dispatch,\r\n        loggedUser,\r\n        isAuth\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"diskBlock\":\"profile-info_diskBlock__Nualw\",\"ava\":\"profile-info_ava__KoqzI\",\"profileInfo\":\"profile-info_profileInfo__2mYP5\",\"infoIcon\":\"profile-info_infoIcon__9kerL\"};","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button} from \"antd\";\r\nimport {UserProfile} from \"../../api/types/types-api\";\r\nimport Input from \"antd/lib/input/Input\";\r\nimport {Textarea} from \"../../common/form-control/form-control\";\r\n\r\n\r\ntype Props = {\r\n    profile: UserProfile\r\n    setEditMode: (value: boolean) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\nconst ProfileDataForm = ({\r\n                             handleSubmit,\r\n                             profile,\r\n                             setEditMode,\r\n                         }: Props & InjectedFormProps<UserProfile, Props>) => {\r\n    const saveHandler = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div style={{marginTop: '10px', display: 'flex', flexDirection: 'column', width: '450px'}}>\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>Полное имя</b> {<Field\r\n                placeholder={'Иван иванов'}\r\n                component={Input}\r\n                name={'fullName'}\r\n                validate={[]}/>}</div>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>Обо мне</b> {<Field\r\n                placeholder={'About me'}\r\n                component={Textarea}\r\n                name={'aboutMe'}\r\n                validate={[]}/>}</div>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>В поиске работы</b> {\r\n                <Field placeholder={''}\r\n                       component={Input}\r\n                       name={'lookingForAJob'}\r\n                       validate={[]}\r\n                       type={'checkbox'}/>}</div>\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>О желаемой работе</b> {<Field placeholder={'Looking For A Job Description'}\r\n                                        component={Textarea}\r\n                                        name={'lookingForAJobDescription'}\r\n                                        validate={[]}/>}</div>\r\n        </div>\r\n\r\n        <div style={{marginTop: '10px', width: '300px'}}>\r\n            <h4>Контакты </h4>\r\n            <ul>\r\n                {Object\r\n                    .keys(profile.contacts)\r\n                    .map((el) => {\r\n                        return <li style={{marginLeft: '20px'}}><b\r\n                            style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>{el}: {<Field\r\n                            placeholder={el}\r\n                            name={`contacts.${el}`}\r\n                            validate={[]}\r\n                            component={Input}\r\n                            key={el}/>}</b>\r\n                        </li>\r\n                    })}\r\n            </ul>\r\n            <div>{<Button ghost\r\n                          type={'primary'}\r\n                          onClick={saveHandler}\r\n            >\r\n                Сохранить\r\n            </Button>}\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const ProfileDataReduxForm = reduxForm<UserProfile, Props>({form: 'Contacts'})(ProfileDataForm)","import React from \"react\";\r\n\r\ntype Props = {\r\n    title: string\r\n    value: string | null\r\n}\r\n\r\nexport const Contacts = ({title, value}: Props) => {\r\n    return <div>\r\n        <b>{title}:</b> {value}\r\n    </div>\r\n}","import {Contacts} from \"../contacts/contacts\";\r\nimport React from \"react\";\r\nimport {Button} from \"antd\";\r\nimport {UserProfile} from \"../../api/types/types-api\";\r\nimport {ProfileContacts} from \"../../pages/profile/profile\";\r\n\r\ntype Props = {\r\n    profile: UserProfile\r\n    isOwner: boolean\r\n    setEditMode: (value: boolean) => void\r\n}\r\n\r\nexport const ProfileData = ({profile, isOwner, setEditMode}: Props) => {\r\n    return <>\r\n        <div style={{marginTop: '10px'}}>\r\n            <div><b>Полное имя</b>: {profile.fullName}</div>\r\n            <div><b>Обо мне</b>: {profile.aboutMe}</div>\r\n            <div><b>В поиске работы</b>: {profile.lookingForAJob ? '!Yes' : 'No!'}</div>\r\n            <div><b>О желаемой работе</b>: {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n\r\n        <div style={{marginTop: '10px'}}>\r\n            <h4>Контакты </h4>\r\n            <ul>\r\n                {Object.keys(profile.contacts).map((el) => {\r\n                    return <li style={{marginLeft: '20px'}}><Contacts title={el}\r\n                                                                      value={profile.contacts[el as keyof ProfileContacts]}\r\n                                                                      key={el}/></li>\r\n                })}\r\n            </ul>\r\n            <div>\r\n                {isOwner && <Button ghost\r\n                                    type={'primary'}\r\n                                    onClick={() => {\r\n                                        setEditMode(true)\r\n                                    }}\r\n                >\r\n                    Редактировать\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype Props = {\r\n    profileStatus: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = ({updateStatus, profileStatus}: Props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [profileStatus])\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(profileStatus)\r\n\r\n    const activateMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const deactivatedMode = () => {\r\n        setEditMode(!editMode)\r\n        updateStatus(status)\r\n    }\r\n\r\n    const changeStatus = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: '10px'}}>\r\n            {!editMode &&\r\n                <div><span\r\n                    onDoubleClick={activateMode}\r\n                >{status || '...'}</span></div>\r\n            }\r\n            {editMode &&\r\n                <div><input\r\n                    autoFocus={true}\r\n                    onBlur={deactivatedMode}\r\n                    onChange={changeStatus}\r\n                    value={status}\r\n                /></div>}\r\n        </div>)\r\n}\r\n\r\nexport default ProfileStatus;","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './profile-info.module.css'\r\nimport photo from '../../img/photo.png'\r\nimport {UploadOutlined} from '@ant-design/icons';\r\nimport {Button, Collapse, CollapseProps, Upload} from 'antd';\r\nimport {useProfileData} from \"../../utils/hooks/useProfileData\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\nimport {Preloader} from \"../../common/preloader/preloader\";\r\nimport {UserProfile} from \"../../api/types/types-api\";\r\nimport {ProfileDataReduxForm} from \"../profile-data-form/profile-data-form\";\r\nimport {ProfileData} from \"../profile-data/profile-data\";\r\nimport ProfileStatus from \"../profile-status/profile-status\";\r\n\r\ntype Props = {\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo = ({isOwner}: Props) => {\r\n\r\n    const {profile, status, dispatch} = useProfileData()\r\n    const {savePhoto, updateStatus, saveProfile} = thunks\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const changeMainPhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files !== null) {\r\n            dispatch(savePhoto(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: UserProfile) => {\r\n        dispatch(saveProfile(formData))\r\n    }\r\n\r\n    const items: CollapseProps['items'] = [\r\n        {\r\n            key: '1',\r\n            label: 'Подробная информация',\r\n            children: editMode\r\n                ? <ProfileDataReduxForm profile={profile}\r\n                                        isOwner={isOwner}\r\n                                        setEditMode={setEditMode}\r\n                                        onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile}\r\n                               isOwner={isOwner}\r\n                               setEditMode={setEditMode}\r\n                />\r\n        }\r\n\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className={s.diskBlock}>\r\n                <img src={profile.photos.large || photo} alt=\"\" className={s.ava}/>\r\n\r\n                <div>{isOwner &&\r\n                    <Upload {...changeMainPhotoHandler}>\r\n                        <Button icon={<UploadOutlined/>}>Обновить фото</Button>\r\n                    </Upload>}\r\n                </div>\r\n\r\n                <ProfileStatus profileStatus={status} updateStatus={updateStatus}/>\r\n\r\n                <Collapse items={items} ghost/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"my-post_content__najiG\",\"item\":\"my-post_item__knwtu\",\"postBlock\":\"my-post_postBlock__kWlnD\",\"posts\":\"my-post_posts__GTYHG\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"post_item__GI50+\"};","import s from \"./post.module.css\";\r\nimport profileAva from \"../../img/photo.png\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    message: string,\r\n    likeCounts: string\r\n}\r\n\r\nconst Post = ({message, likeCounts}: Props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={profileAva} alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Нравиться </span>\r\n                {likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newPostForm\":\"add-new-post-form_newPostForm__2YpEA\"};","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Button} from \"antd\";\r\nimport s from './add-new-post-form.module.css'\r\nimport {maxLengthCreator, required} from \"../../utils/validators/login-form-validator\";\r\nimport {MessageBody} from \"../../pages/dialogs/dialogs\";\r\nimport {Textarea} from \"../../common/form-control/form-control\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddNewPostForm = (props: InjectedFormProps<MessageBody>) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.newPostForm}>\r\n            <div>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                    placeholder={'Новая запись'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button ghost type={'primary'}>Добавить запись</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostReduxForm = reduxForm<MessageBody>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n","import React from \"react\";\r\nimport s from './my-post.module.css'\r\nimport {useMyPostsData} from \"../../../utils/hooks/useMyPostsData\";\r\nimport {actions} from \"../../../redux/actions/actions\";\r\nimport Post from \"../../../components/post/post\";\r\nimport {MessageBody} from \"../../dialogs/dialogs\";\r\nimport {AddNewPostReduxForm} from \"../../../components/add-new-post-form/add-new-post-form\";\r\n\r\nconst MyPost = React.memo(() => {\r\n\r\n    const {posts, dispatch} = useMyPostsData()\r\n\r\n    const mappedPosts = posts.map((posts, index) => <Post key={index} message={posts.message}\r\n                                                          likeCounts={posts.likeCounts}/>)\r\n\r\n    let onAddPost = (values: MessageBody) => {\r\n        dispatch(actions.addPost(values.newMessageBody))\r\n    }\r\n\r\n    return (<div className={s.content}>\r\n        <div className={s.postBlock}>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>{mappedPosts}</div>\r\n        </div>\r\n    </div>)\r\n});\r\n\r\nexport default MyPost","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts} from \"../selectors/profile-selectors/profile-selectors\";\r\n\r\nexport const useMyPostsData = () => {\r\n    const posts = useSelector(getPosts)\r\n    const dispatch = useDispatch()\r\n\r\n    return {\r\n        posts,\r\n        dispatch\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useProfileData} from \"../../utils/hooks/useProfileData\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\nimport ProfileInfo from \"../../components/profile-info/profile-info\";\r\nimport MyPost from \"./MyPosts/my-post\";\r\n\r\nconst Profile = () => {\r\n\r\n    const {userId} = useParams<{ userId: string }>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {loggedUser} = useProfileData()\r\n\r\n    const refreshProfile = () => {\r\n        let userID = userId;\r\n\r\n        if (!userID) {\r\n            userID = !userID ? '29875' : String(loggedUser);\r\n            if (!userID) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n\r\n        dispatch(thunks.getProfile(+userID));\r\n        dispatch(thunks.getUserStatus(userID));\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [userId]);\r\n\r\n    return (<div>\r\n        <ProfileInfo isOwner={!userId}/>\r\n        <MyPost/>\r\n    </div>)\r\n}\r\n\r\nexport default Profile\r\n\r\nexport type ProfilePhoto = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileContacts = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}"],"names":["getPosts","state","profilePage","posts","getProfile","profile","getStatus","status","useProfileData","useSelector","dispatch","useDispatch","loggedUser","getLoggedUser","isAuth","getIsAuth","ProfileDataReduxForm","reduxForm","form","_ref","handleSubmit","setEditMode","_jsxs","onSubmit","children","style","marginTop","display","flexDirection","width","gap","justifyContent","_jsx","Field","placeholder","component","Input","name","validate","Textarea","type","Object","keys","contacts","map","el","marginLeft","concat","Button","ghost","onClick","saveHandler","Contacts","title","value","ProfileData","isOwner","_Fragment","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","updateStatus","profileStatus","useEffect","setStatus","editMode","useState","onDoubleClick","activateMode","autoFocus","onBlur","deactivatedMode","onChange","event","currentTarget","savePhoto","saveProfile","thunks","Preloader","items","key","label","formData","className","s","src","photos","large","photo","alt","Upload","e","target","files","icon","UploadOutlined","ProfileStatus","Collapse","message","likeCounts","profileAva","maxLength10","maxLengthCreator","AddNewPostReduxForm","props","required","React","mappedPosts","index","Post","values","actions","addPost","newMessageBody","Profile","userId","useParams","history","useHistory","refreshProfile","userID","String","push","getUserStatus","ProfileInfo","MyPost"],"sourceRoot":""}