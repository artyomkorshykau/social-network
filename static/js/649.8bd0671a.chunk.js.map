{"version":3,"file":"static/js/649.8bd0671a.chunk.js","mappings":"iJACA,QAAiC,yCAAjC,EAAqF,mC,2CCM9E,MAAMA,EAAiBA,KAE1B,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IACzCC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,GAE3BC,GAAWC,EAAAA,EAAAA,MASjB,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWC,UACvBC,EAAAA,EAAAA,KAAA,YAAUC,SAAWC,GAAUb,EAAea,EAAMC,cAAcC,OACxDA,MAAOhB,EACPiB,YAAa,oJAE3BL,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAACC,KAAM,UAAWC,SAA2B,YAAjBjB,EAC3BkB,QAhBWC,KAClBtB,IAGLM,EAASiB,EAAO,OAAAC,YAAYxB,IAC5BC,EAAe,IAAG,EAWsBU,SAAC,+DAEvC,C,uDC9BV,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0B,wCCK5I,MAAMc,EAAmBC,IAAe,CACpCC,OAAQD,EAAME,KAAKD,SCJhB,MAAME,EAAkBH,GAAoBA,EAAMI,YCFzD,GAAgB,QAAU,6BAA6B,OAAS,6B,cCQzD,MAAMC,EAAaC,IAAwB,IAAvB,KAACC,EAAI,GAAEC,GAAUF,EACpCG,EAAO,YAAcD,EAEzB,OAAQtB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAE0B,OAAS,IAAM1B,EAAE2B,OAAO1B,UAC9CC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAO,CAACC,GAAIJ,EAAKxB,SAAEsB,KAClB,E,cCbV,SAAgB,QAAU,0BCMbO,EAAUR,IAAuB,IAAtB,QAACS,GAAeT,EACpC,OAAQpB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAE0B,OAAOzB,SAAE8B,GAAc,ECG/CC,GNA8BC,EMAH,KAE7B,MAAM,YAACb,GCPA,CACHA,aAHgB1B,EAAAA,EAAAA,IAAYyB,IDWhC,IAAIe,EAAcd,EAAYe,QACzBC,KAAI,CAACD,EAAiBE,KAAUnC,EAAAA,EAAAA,KAACmB,EAAU,CACCE,KAAMY,EAAQZ,KACdC,GAAIW,EAAQX,IAFPa,KAGlDC,EAAclB,EAAYmB,SACzBH,KAAI,CAACL,EAAmBM,KAAUnC,EAAAA,EAAAA,KAAC4B,EAAO,CACCC,QAASA,EAAQS,OADZH,KAOrD,OACIvC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAC1BiC,KAELhC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAWC,UACvBC,EAAAA,EAAAA,KAAA,OAAAD,SAAMqC,OAEVpC,EAAAA,EAAAA,KAACb,EAAAA,EAAc,MACb,GNhBHoD,EAAAA,EAAAA,IAA0C1B,EAA1C0B,EARP,SAA2BC,GAEvB,IAAI,OAACzB,KAAW0B,GAAaD,EAC7B,OAAKzB,GAEEf,EAAAA,EAAAA,KAAC+B,EAAS,IAAKU,KAFFzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAQ,CAACf,GAAI,UAGtC,KAPG,IAA6BI,EMiCpC,S,0CE1CO,MAAMY,EAAmB7B,GAAoBA,EAAM8B,KAAKP,SAClD5C,EAAmBqB,GAAoBA,EAAM8B,KAAKC,M","sources":["webpack://samurai-way/./src/components/add-message-form/add-message-form.module.css?3001","components/add-message-form/add-message-form.tsx","webpack://samurai-way/./src/pages/dialogs/dialogs.module.css?b3ee","hoc/withAuthRedirect.tsx","utils/selectors/dialogs-selectors/dialogs-selectors.ts","webpack://samurai-way/./src/components/dialog-Item/dialog-item.module.css?2deb","components/dialog-Item/dialog-item.tsx","webpack://samurai-way/./src/components/dialog-message/dialogs.module.css?2e75","components/dialog-message/dialog-message.tsx","pages/dialogs/dialogs.tsx","utils/hooks/useDialogsData.ts","utils/selectors/chat-selectors/chat-selectors.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"AddMessageForm\":\"add-message-form_AddMessageForm__nVo4Y\",\"textarea\":\"add-message-form_textarea__o0Bsp\"};","import {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './add-message-form.module.css'\r\nimport {Button} from \"antd\";\r\nimport {getSocketStatus} from \"../../utils/selectors/chat-selectors/chat-selectors\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\n\r\nexport const AddMessageForm = () => {\r\n\r\n    const [messageText, setMessageText] = useState('')\r\n    const socketStatus = useSelector(getSocketStatus)\r\n\r\n    const dispatch = useDispatch()\r\n    const sendMessageHandler = () => {\r\n        if (!messageText) {\r\n            return\r\n        }\r\n        dispatch(thunks.sendMessage(messageText))\r\n        setMessageText('')\r\n    }\r\n\r\n    return <div className={s.AddMessageForm}>\r\n        <div className={s.textarea}>\r\n            <textarea onChange={(event) => setMessageText(event.currentTarget.value)}\r\n                      value={messageText}\r\n                      placeholder={'Введите сообщение петухам'}/>\r\n        </div>\r\n        <div>\r\n            <Button type={'primary'} disabled={socketStatus === 'pending'}\r\n                    onClick={sendMessageHandler}>Отправить</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__TAjrn\",\"dialogsItems\":\"dialogs_dialogsItems__Q4JYr\",\"active\":\"dialogs_active__Lp-gy\",\"messages\":\"dialogs_messages__fQJ4n\",\"message\":\"dialogs_message__-Bk9q\"};","import React, {ComponentType} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppState} from \"../redux/store/store\";\r\n\r\n\r\nconst mapStateToProps = (state: AppState): MapStateToProps => ({\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    function RedirectComponent(props: MapStateToProps) {\r\n\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as unknown as T}/>\r\n    }\r\n\r\n    return connect<MapStateToProps, {}, T, AppState>(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n//--------------------------------TYPES--------------------------------\r\ntype MapStateToProps = {\r\n    isAuth: boolean | null\r\n}\r\n","import {AppState} from \"../../../redux/store/store\";\r\n\r\n\r\nexport const getDialogsPage = (state: AppState) => state.dialogsPage\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialog-item_dialogs__420aw\",\"active\":\"dialog-item_active__JzOWe\"};","import s from \".//dialog-item.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\nexport const DialogItem = ({name, id}: Props) => {\r\n    let path = '/dialogs/' + id\r\n\r\n    return (<div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{name}</NavLink>\r\n    </div>)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__tU9Xc\"};","import s from \"./dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    message: string\r\n}\r\n\r\nexport const Message = ({message}: Props) => {\r\n    return (<div className={s.dialog}>{message}</div>)\r\n}","import React from \"react\";\r\nimport s from './dialogs.module.css'\r\nimport {actions} from \"../../redux/actions/actions\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {useDialogsData} from \"../../utils/hooks/useDialogsData\";\r\nimport {Dialog, Messages} from \"../../redux/reducers/dialogs-reducer\";\r\nimport {DialogItem} from \"../../components/dialog-Item/dialog-item\";\r\nimport {AddMessageForm} from \"../../components/add-message-form/add-message-form\";\r\nimport {Message} from \"../../components/dialog-message/dialog-message\";\r\n\r\n\r\nconst Dialogs = withAuthRedirect(() => {\r\n\r\n    const {dialogsPage} = useDialogsData()\r\n\r\n    let dialogsItem = dialogsPage.dialogs\r\n        .map((dialogs: Dialog, index) => <DialogItem key={index}\r\n                                                     name={dialogs.name}\r\n                                                     id={dialogs.id}/>)\r\n    let messageItem = dialogsPage.messages\r\n        .map((message: Messages, index) => <Message key={index}\r\n                                                    message={message.title}/>)\r\n\r\n    const addNewMessage = (values: MessageBody) => {\r\n        actions.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageItem}</div>\r\n            </div>\r\n            <AddMessageForm/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport type MessageBody = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport default Dialogs","import {useSelector} from \"react-redux\";\r\nimport {getDialogsPage} from \"../selectors/dialogs-selectors/dialogs-selectors\";\r\n\r\nexport const useDialogsData = () => {\r\n    const dialogsPage = useSelector(getDialogsPage)\r\n\r\n    return {\r\n        dialogsPage,\r\n    }\r\n}","import {AppState} from \"../../../redux/store/store\";\r\n\r\nexport const getChatMessages = (state: AppState) => state.chat.messages\r\nexport const getSocketStatus = (state: AppState) => state.chat.status\r\n\r\n\r\n\r\n"],"names":["AddMessageForm","messageText","setMessageText","useState","socketStatus","useSelector","getSocketStatus","dispatch","useDispatch","_jsxs","className","s","children","_jsx","onChange","event","currentTarget","value","placeholder","Button","type","disabled","onClick","sendMessageHandler","thunks","sendMessage","mapStateToProps","state","isAuth","auth","getDialogsPage","dialogsPage","DialogItem","_ref","name","id","path","dialog","active","NavLink","to","Message","message","Dialogs","Component","dialogsItem","dialogs","map","index","messageItem","messages","title","connect","props","restProps","Redirect","getChatMessages","chat","status"],"sourceRoot":""}