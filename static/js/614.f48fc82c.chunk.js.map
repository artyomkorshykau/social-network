{"version":3,"file":"static/js/614.f48fc82c.chunk.js","mappings":"qJACA,QAA4B,+BAA5B,EAAiE,yB,iCCMjE,MAuCA,EAvCsBA,IAA2C,IAA1C,aAACC,EAAY,cAAEC,GAAqBF,GAEvDG,EAAAA,EAAAA,YAAU,KACNC,EAAUC,EAAO,GAClB,CAACH,IAEJ,MAAOI,EAAUC,IAAeC,EAAAA,EAAAA,WAAkB,IAC3CH,EAAQD,IAAaI,EAAAA,EAAAA,UAAiBN,GAe7C,OACIO,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,QAAQC,SAAA,EAC1BN,IACEO,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,QACDC,cAjBKC,KACjBR,GAAaD,EAAS,EAgBkBM,SAC9BP,GAAU,UAEfC,IACGO,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAAA,SACDG,WAAW,EACXC,OAnBQC,KACpBX,GAAaD,GACbL,EAAaI,EAAO,EAkBRc,SAfMC,IAClBhB,EAAUgB,EAAMC,cAAcC,MAAM,EAexBA,MAAOjB,QAEb,ECpCDkB,EAAWvB,IAA4B,IAA3B,MAACwB,EAAK,MAAEF,GAAatB,EAC1C,OAAOS,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAIY,EAAM,OAAK,IAAEF,IACf,E,cCEH,MAAMG,EAAczB,IAA6C,IAA5C,QAAC0B,EAAO,QAAEC,EAAO,YAAEpB,GAAmBP,EAC9D,OAAOS,EAAAA,EAAAA,MAAAmB,EAAAA,SAAA,CAAAhB,SAAA,EACHH,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,QAAQC,SAAA,EAC5BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EAAKC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KAAGc,EAAQG,aAChCpB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EAAKC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KAAGc,EAAQI,YAC/BrB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EAAKC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KAAGc,EAAQK,eAAiB,OAAS,UAClEtB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EAAKC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kCAAiC,KAAGc,EAAQM,iCAGxDvB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,QAAQC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SACKqB,OAAOC,KAAKR,EAAQS,UAAUC,KAAKC,IACzBxB,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAC4B,WAAY,QAAQ1B,UAACC,EAAAA,EAAAA,KAACU,EAAQ,CAACC,MAAOa,EACPf,MAAOI,EAAQS,SAASE,IACnBA,UAG/DxB,EAAAA,EAAAA,KAAA,OAAAD,SACKe,IAAWd,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAACC,OAAK,EACLC,KAAM,UACNC,QAASA,KACLnC,GAAY,EAAK,EACnBK,SACrB,0FAKV,E,iCC1BP,MA+Da+B,GAAuBC,EAAAA,EAAAA,GAA8B,CAACC,KAAM,YAArCD,EA/DZ5C,IAIuD,IAJtD,aACI8C,EAAY,QACZpB,EAAO,YACPnB,GAC4CP,EAKrE,OAAOS,EAAAA,EAAAA,MAAA,QAAMsC,SAAUD,EAAalC,SAAA,EAChCH,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,OAAQqC,QAAS,OAAQC,cAAe,SAAUC,MAAO,SAAStC,SAAA,EACtFH,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACsC,QAAS,OAAQG,IAAK,OAAQC,eAAgB,iBAAiBxC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,KAAEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CACjGC,YAAa,YACbC,UAAWC,EAAAA,EACXC,KAAM,WACNC,SAAU,SAEdjD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACsC,QAAS,OAAQG,IAAK,OAAQC,eAAgB,iBAAiBxC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aAAY,KAAEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CAChGC,YAAa,WACbC,UAAWI,EAAAA,EACXF,KAAM,UACNC,SAAU,SAEdjD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACsC,QAAS,OAAQG,IAAK,OAAQC,eAAgB,iBAAiBxC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAAqB,KACjGC,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CAACC,YAAa,GACbC,UAAWC,EAAAA,EACXC,KAAM,iBACNC,SAAU,GACVjB,KAAM,iBACjBhC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACsC,QAAS,OAAQG,IAAK,OAAQC,eAAgB,iBAAiBxC,SAAA,EAACC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kCAC7D,KAAEC,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CAACC,YAAa,gCACbC,UAAWI,EAAAA,EACXF,KAAM,4BACNC,SAAU,YAG1CjD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,UAAW,OAAQuC,MAAO,SAAStC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SACKqB,OACIC,KAAKR,EAAQS,UACbC,KAAKC,IACKxB,EAAAA,EAAAA,KAAA,MAAIH,MAAO,CAAC4B,WAAY,QAAQ1B,UAACH,EAAAA,EAAAA,MAAA,KACpCC,MAAO,CAACsC,QAAS,OAAQG,IAAK,OAAQC,eAAgB,iBAAiBxC,SAAA,CAAEyB,EAAG,MAAGxB,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CACrFC,YAAajB,EACboB,KAAI,YAAAG,OAAcvB,GAClBqB,SAAU,GACVH,UAAWC,EAAAA,GACNnB,aAIrBxB,EAAAA,EAAAA,KAAA,OAAAD,UAAMC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAACC,OAAK,EACLC,KAAM,UACNC,QAjDFmB,KAChBtD,GAAY,EAAM,EAgDqBK,SAClC,kEAKF,I,uBCxEJ,MAAMkD,EAAiBA,KAOnB,CACHpC,SAPYqC,EAAAA,EAAAA,IAAYC,EAAAA,IAQxB3D,QAPW0D,EAAAA,EAAAA,IAAYE,EAAAA,IAQvBC,UAPaC,EAAAA,EAAAA,MAQbC,YAPeL,EAAAA,EAAAA,IAAYM,EAAAA,IAQ3BC,QAPWP,EAAAA,EAAAA,IAAYQ,EAAAA,M,4CCS/B,MAyDA,EAzDoBvE,IAAuB,IAAtB,QAAC2B,GAAe3B,EAEjC,MAAM,QAAC0B,EAAO,OAAErB,EAAM,SAAE6D,GAAYJ,KAC9B,UAACU,EAAS,aAAEvE,EAAY,YAAEwE,GAAeC,EAAAA,QAExCpE,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEzC,IAAKkB,EACD,OAAOb,EAAAA,EAAAA,KAAC8D,EAAAA,EAAS,IAGrB,MAUMC,EAAgC,CAClC,CACIC,IAAK,IACLC,MAAO,YACPlE,SAAUN,GACJO,EAAAA,EAAAA,KAAC8B,EAAoB,CAACjB,QAASA,EACTC,QAASA,EACTpB,YAAaA,EACbwC,SAZlBgC,IACdb,EAASO,EAAYM,GAAU,KAYrBlE,EAAAA,EAAAA,KAACY,EAAW,CAACC,QAASA,EACTC,QAASA,EACTpB,YAAaA,MAKxC,OACIM,EAAAA,EAAAA,KAAA,OAAAD,UACIH,EAAAA,EAAAA,MAAA,OAAKuE,UAAWC,EAAYrE,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKqE,IAAKxD,EAAQyD,OAAOC,OAASC,EAAOC,IAAI,GAAGN,UAAWC,KAE3DpE,EAAAA,EAAAA,KAAA,OAAAD,SAAMe,IACFd,EAAAA,EAAAA,KAAC0E,EAAAA,EAAM,IAhCSC,IACL,OAAnBA,EAAEC,OAAOC,OACTxB,EAASM,EAAUgB,EAAEC,OAAOC,MAAM,IACtC,EA6B8C9E,UAC9BC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAACoD,MAAM9E,EAAAA,EAAAA,KAAC+E,EAAAA,EAAc,IAAGhF,SAAC,sBAIzCC,EAAAA,EAAAA,KAACgF,EAAa,CAAC3F,cAAeG,EAAQJ,aAAcA,KAEpDY,EAAAA,EAAAA,KAACiF,EAAAA,EAAQ,CAAClB,MAAOA,EAAOpC,OAAK,QAG/B,ECrEd,EAA0B,wBAA1B,EAAyD,qBAAzD,EAA0F,0BAA1F,EAA4H,sBCqB5H,EAbaxC,IAAmC,IAAlC,QAAC+F,EAAO,WAAEC,GAAkBhG,EACtC,OACIS,EAAAA,EAAAA,MAAA,OAAKuE,UAAWC,EAAOrE,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKqE,IAAKe,EAAYX,IAAI,KACzBS,GACDtF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UACLoF,OAEH,E,wBCjBd,QAA8B,oCCQxBE,GAAcC,EAAAA,EAAAA,GAAiB,IAqBxBC,GAAsBxD,EAAAA,EAAAA,GAAuB,CAACC,KAAM,yBAA9BD,EAnBJyD,IAGvB5F,EAAAA,EAAAA,MAAA,QAAMsC,SAAUsD,EAAMvD,aAAckC,UAAWC,EAAcrE,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACwC,EAAAA,EAAK,CACFI,KAAM,iBACNF,UAAWI,EAAAA,EACXD,SAAU,CAAC4C,EAAAA,EAAUJ,GACrB5C,YAAa,oBAGrBzC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CAACC,OAAK,EAACC,KAAM,UAAU7B,SAAC,oBCK/C,EApBe2F,EAAAA,MAAW,KAEtB,MAAM,MAACC,EAAK,SAAEtC,GCJP,CACHsC,OAJUzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAKtBvC,UAJaC,EAAAA,EAAAA,ODQXuC,EAAcF,EAAMpE,KAAI,CAACoE,EAAOG,KAAU9F,EAAAA,EAAAA,KAAC+F,EAAI,CAAab,QAASS,EAAMT,QAC3BC,WAAYQ,EAAMR,YADbW,KAO3D,OAAQ9F,EAAAA,EAAAA,KAAA,OAAKmE,UAAWC,EAAUrE,UAC9BH,EAAAA,EAAAA,MAAA,OAAKuE,UAAWC,EAAYrE,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACuF,EAAmB,CAACrD,SAPZ8D,IACb3C,EAAS4C,EAAAA,EAAQC,QAAQF,EAAOG,gBAAgB,KAO5CnG,EAAAA,EAAAA,KAAA,OAAKmE,UAAWC,EAAQrE,SAAE8F,QAE5B,I,cEjBV,MAgCA,EAhCoBO,KAEhB,MAAM,OAACC,IAAUC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACVnD,GAAWC,EAAAA,EAAAA,OAEX,WAACC,GAAcN,IAoBrB,OAJA3D,EAAAA,EAAAA,YAAU,KAdamH,MACnB,IAAIC,EAASL,EAERK,IACDA,EAAUA,EAAmBC,OAAOpD,GAAjB,QACdmD,GACDH,EAAQK,KAAK,WAIrBvD,EAASQ,EAAO,OAAAV,YAAYuD,IAC5BrD,EAASQ,EAAO,OAAAgD,cAAcH,GAAQ,EAItCD,EAAgB,GACjB,CAACJ,KAEIzG,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACJC,EAAAA,EAAAA,KAAC8G,EAAW,CAAChG,SAAUuF,KACvBrG,EAAAA,EAAAA,KAAC+G,EAAM,MACL,C","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus.tsx","components/Profile/ProfileInfo/Contacts/Contacts.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","utils/hooks/useProfileData.ts","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPost.module.css?8a86","components/Profile/MyPosts/Post/Post.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.module.css?bb6c","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/MyPosts/MyPost.tsx","utils/hooks/useMyPostsData.ts","components/Profile/ProfilePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"diskBlock\":\"ProfileInfo_diskBlock__Hi+ni\",\"ava\":\"ProfileInfo_ava__Bm-FQ\",\"profileInfo\":\"ProfileInfo_profileInfo__9af1X\",\"infoIcon\":\"ProfileInfo_infoIcon__6OjD+\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype Props = {\r\n    profileStatus: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus = ({updateStatus, profileStatus}: Props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [profileStatus])\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(profileStatus)\r\n\r\n    const activateMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const deactivatedMode = () => {\r\n        setEditMode(!editMode)\r\n        updateStatus(status)\r\n    }\r\n\r\n    const changeStatus = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop: '10px'}}>\r\n            {!editMode &&\r\n                <div><span\r\n                    onDoubleClick={activateMode}\r\n                >{status || '...'}</span></div>\r\n            }\r\n            {editMode &&\r\n                <div><input\r\n                    autoFocus={true}\r\n                    onBlur={deactivatedMode}\r\n                    onChange={changeStatus}\r\n                    value={status}\r\n                /></div>}\r\n        </div>)\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\n\r\ntype Props = {\r\n    title: string\r\n    value: string | null\r\n}\r\n\r\nexport const Contacts = ({title, value}: Props) => {\r\n    return <div>\r\n        <b>{title}:</b> {value}\r\n    </div>\r\n}","import {Contacts} from \"../Contacts/Contacts\";\r\nimport React from \"react\";\r\nimport {UserProfile} from \"../../../../api/types/typesApi\";\r\nimport {ProfileContacts} from \"../../ProfilePage\";\r\nimport {Button} from \"antd\";\r\n\r\ntype Props = {\r\n    profile: UserProfile\r\n    isOwner: boolean\r\n    setEditMode: (value: boolean) => void\r\n}\r\n\r\nexport const ProfileData = ({profile, isOwner, setEditMode}: Props) => {\r\n    return <>\r\n        <div style={{marginTop: '10px'}}>\r\n            <div><b>Full name</b>: {profile.fullName}</div>\r\n            <div><b>About me</b>: {profile.aboutMe}</div>\r\n            <div><b>Looking for a job</b>: {profile.lookingForAJob ? '!Yes' : 'No!'}</div>\r\n            <div><b>Looking for a job description</b>: {profile.lookingForAJobDescription}</div>\r\n        </div>\r\n\r\n        <div style={{marginTop: '10px'}}>\r\n            <h4>Contacts </h4>\r\n            <ul>\r\n                {Object.keys(profile.contacts).map((el) => {\r\n                    return <li style={{marginLeft: '20px'}}><Contacts title={el}\r\n                                                                      value={profile.contacts[el as keyof ProfileContacts]}\r\n                                                                      key={el}/></li>\r\n                })}\r\n            </ul>\r\n            <div>\r\n                {isOwner && <Button ghost\r\n                                    type={'primary'}\r\n                                    onClick={() => {\r\n                                        setEditMode(true)\r\n                                    }}\r\n                >\r\n                    Редактировать\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Input, TextArea1} from \"../../../../common/FormControls/FormControls\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {UserProfile} from \"../../../../api/types/typesApi\";\r\nimport {Button} from \"antd\";\r\nimport Alert from \"antd/lib/alert/Alert\";\r\n\r\n\r\ntype Props = {\r\n    profile: UserProfile\r\n    setEditMode: (value: boolean) => void\r\n    isOwner: boolean\r\n}\r\n\r\n\r\nconst ProfileDataForm = ({\r\n                             handleSubmit,\r\n                             profile,\r\n                             setEditMode,\r\n                         }: Props & InjectedFormProps<UserProfile, Props>) => {\r\n    const saveHandler = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div style={{marginTop: '10px', display: 'flex', flexDirection: 'column', width: '450px'}}>\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>Full name</b> {<Field\r\n                placeholder={'Full name'}\r\n                component={Input}\r\n                name={'fullName'}\r\n                validate={[]}/>}</div>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>About me</b> {<Field\r\n                placeholder={'About me'}\r\n                component={TextArea1}\r\n                name={'aboutMe'}\r\n                validate={[]}/>}</div>\r\n\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>Looking for a job</b> {\r\n                <Field placeholder={''}\r\n                       component={Input}\r\n                       name={'lookingForAJob'}\r\n                       validate={[]}\r\n                       type={'checkbox'}/>}</div>\r\n            <div style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}><b>Looking for a job\r\n                Description</b> {<Field placeholder={'Looking For A Job Description'}\r\n                                        component={TextArea1}\r\n                                        name={'lookingForAJobDescription'}\r\n                                        validate={[]}/>}</div>\r\n        </div>\r\n\r\n        <div style={{marginTop: '10px', width: '300px'}}>\r\n            <h4>Contacts </h4>\r\n            <ul>\r\n                {Object\r\n                    .keys(profile.contacts)\r\n                    .map((el) => {\r\n                        return <li style={{marginLeft: '20px'}}><b\r\n                            style={{display: 'flex', gap: '10px', justifyContent: 'space-between'}}>{el}: {<Field\r\n                            placeholder={el}\r\n                            name={`contacts.${el}`}\r\n                            validate={[]}\r\n                            component={Input}\r\n                            key={el}/>}</b>\r\n                        </li>\r\n                    })}\r\n            </ul>\r\n            <div>{<Button ghost\r\n                          type={'primary'}\r\n                          onClick={saveHandler}\r\n            >\r\n                Сохранить\r\n            </Button>}\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const ProfileDataReduxForm = reduxForm<UserProfile, Props>({form: 'Contacts'})(ProfileDataForm)","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuth, getLoggedUser, getProfile, getStatus} from \"../selectors/userSelectors\";\r\n\r\nexport const useProfileData = () => {\r\n    const profile = useSelector(getProfile)\r\n    const status = useSelector(getStatus)\r\n    const dispatch = useDispatch()\r\n    const loggedUser = useSelector(getLoggedUser);\r\n    const isAuth = useSelector(getIsAuth);\r\n\r\n    return {\r\n        profile,\r\n        status,\r\n        dispatch,\r\n        loggedUser,\r\n        isAuth\r\n    }\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport photo from '../../../img/photo.png'\r\nimport ProfileStatus from \"../ProfileStatus\";\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\nimport {ProfileDataReduxForm} from './ProfileDataForm/ProfileDataForm';\r\nimport {useProfileData} from \"../../../utils/hooks/useProfileData\";\r\nimport {thunks} from \"../../../redux/thunks/thunks\";\r\nimport {UserProfile} from \"../../../api/types/typesApi\";\r\nimport {InfoCircleOutlined, UploadOutlined} from '@ant-design/icons';\r\nimport {Button, Collapse, CollapseProps, Flex, Spin, Upload} from 'antd';\r\n\r\ntype Props = {\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo = ({isOwner}: Props) => {\r\n\r\n    const {profile, status, dispatch} = useProfileData()\r\n    const {savePhoto, updateStatus, saveProfile} = thunks\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const changeMainPhotoHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files !== null) {\r\n            dispatch(savePhoto(e.target.files[0]))\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: UserProfile) => {\r\n        dispatch(saveProfile(formData))\r\n    }\r\n\r\n    const items: CollapseProps['items'] = [\r\n        {\r\n            key: '1',\r\n            label: 'More info',\r\n            children: editMode\r\n                ? <ProfileDataReduxForm profile={profile}\r\n                                        isOwner={isOwner}\r\n                                        setEditMode={setEditMode}\r\n                                        onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile}\r\n                               isOwner={isOwner}\r\n                               setEditMode={setEditMode}\r\n                />\r\n        }\r\n\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className={s.diskBlock}>\r\n                <img src={profile.photos.large || photo} alt=\"\" className={s.ava}/>\r\n\r\n                <div>{isOwner &&\r\n                    <Upload {...changeMainPhotoHandler}>\r\n                        <Button icon={<UploadOutlined/>}>Change photo</Button>\r\n                    </Upload>}\r\n                </div>\r\n\r\n                <ProfileStatus profileStatus={status} updateStatus={updateStatus}/>\r\n\r\n                <Collapse items={items} ghost/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPost_content__kM9HN\",\"item\":\"MyPost_item__ddCw3\",\"postBlock\":\"MyPost_postBlock__8viTO\",\"posts\":\"MyPost_posts__1aSdU\"};","import s from \"../MyPost.module.css\";\r\nimport profileAva from \"../../../../img/photo.png\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n    message: string,\r\n    likeCounts: string\r\n}\r\n\r\nconst Post = ({message, likeCounts}: Props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={profileAva} alt=\"\"/>\r\n            {message}\r\n            <div>\r\n                <span>Like </span>\r\n                {likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newPostForm\":\"AddNewPostForm_newPostForm__QsJ6u\"};","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea1} from \"../../../../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validator\";\r\nimport React from \"react\";\r\nimport {MessageBody} from \"../../../Dialogs/DialogsPage\";\r\nimport {Button} from \"antd\";\r\nimport s from './AddNewPostForm.module.css'\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nexport const AddNewPostForm = (props: InjectedFormProps<MessageBody>) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.newPostForm}>\r\n            <div>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={TextArea1}\r\n                    validate={[required, maxLength10]}\r\n                    placeholder={'Post message'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button ghost type={'primary'}>Add post</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostReduxForm = reduxForm<MessageBody>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n","import React from \"react\";\r\nimport s from './MyPost.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {MessageBody} from \"../../Dialogs/DialogsPage\";\r\nimport {useMyPostsData} from \"../../../utils/hooks/useMyPostsData\";\r\nimport {actions} from \"../../../redux/actions/actions\";\r\nimport {AddNewPostReduxForm} from \"./AddNewPostForm/AddNewPostForm\";\r\nimport Alert from \"antd/lib/alert/Alert\";\r\n\r\nconst MyPost = React.memo(() => {\r\n\r\n    const {posts, dispatch} = useMyPostsData()\r\n\r\n    const mappedPosts = posts.map((posts, index) => <Post key={index} message={posts.message}\r\n                                                          likeCounts={posts.likeCounts}/>)\r\n\r\n    let onAddPost = (values: MessageBody) => {\r\n        dispatch(actions.addPost(values.newMessageBody))\r\n    }\r\n\r\n    return (<div className={s.content}>\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>{mappedPosts}</div>\r\n        </div>\r\n    </div>)\r\n});\r\n\r\nexport default MyPost","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts} from \"../selectors/userSelectors\";\r\n\r\nexport const useMyPostsData = () => {\r\n    const posts = useSelector(getPosts)\r\n    const dispatch = useDispatch()\r\n\r\n    return {\r\n        posts,\r\n        dispatch\r\n    }\r\n}","import React, {useEffect} from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPost from \"./MyPosts/MyPost\";\r\nimport {UserProfile} from \"../../api/types/typesApi\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useProfileData} from \"../../utils/hooks/useProfileData\";\r\nimport {thunks} from \"../../redux/thunks/thunks\";\r\n\r\nconst ProfilePage = () => {\r\n\r\n    const {userId} = useParams<{ userId: string }>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const {loggedUser} = useProfileData()\r\n\r\n    const refreshProfile = () => {\r\n        let userID = userId;\r\n\r\n        if (!userID) {\r\n            userID = !userID ? '29875' : String(loggedUser);\r\n            if (!userID) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n\r\n        dispatch(thunks.getProfile(+userID));\r\n        dispatch(thunks.getUserStatus(userID));\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [userId]);\r\n\r\n    return (<div>\r\n        <ProfileInfo isOwner={!userId}/>\r\n        <MyPost/>\r\n    </div>)\r\n}\r\n\r\nexport default ProfilePage\r\n\r\nexport type ProfilePhoto = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ProfileContacts = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}"],"names":["_ref","updateStatus","profileStatus","useEffect","setStatus","status","editMode","setEditMode","useState","_jsxs","style","marginTop","children","_jsx","onDoubleClick","activateMode","autoFocus","onBlur","deactivatedMode","onChange","event","currentTarget","value","Contacts","title","ProfileData","profile","isOwner","_Fragment","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","el","marginLeft","Button","ghost","type","onClick","ProfileDataReduxForm","reduxForm","form","handleSubmit","onSubmit","display","flexDirection","width","gap","justifyContent","Field","placeholder","component","Input","name","validate","TextArea1","concat","saveHandler","useProfileData","useSelector","getProfile","getStatus","dispatch","useDispatch","loggedUser","getLoggedUser","isAuth","getIsAuth","savePhoto","saveProfile","thunks","Preloader","items","key","label","formData","className","s","src","photos","large","photo","alt","Upload","e","target","files","icon","UploadOutlined","ProfileStatus","Collapse","message","likeCounts","profileAva","maxLength10","maxLengthCreator","AddNewPostReduxForm","props","required","React","posts","getPosts","mappedPosts","index","Post","values","actions","addPost","newMessageBody","ProfilePage","userId","useParams","history","useHistory","refreshProfile","userID","String","push","getUserStatus","ProfileInfo","MyPost"],"sourceRoot":""}